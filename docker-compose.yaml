services:
  todo-api:
    build:
      context: "./todo-api"
      dockerfile: Dockerfile
    image: "danilocristo/todo-api:0.0.1"
    container_name: todo-api
    ports:
      - 5000:5000
    networks:
      - kong_learning
    depends_on:
      rabbitmq:
        condition: service_healthy
  scheduler-api:
    build:
      context: "./scheduler-api"
      dockerfile: Dockerfile
    image: "danilocristo/scheduler-api:0.0.1"
    container_name: scheduler-api
    ports:
      - 3000:3000
    networks:
      - kong_learning
    depends_on:
      rabbitmq:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports: 
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=fitz
      - RABBITMQ_DEFAULT_PASS=fitz
    networks:
      - kong_learning
    healthcheck:
      test: rabbitmq-diagnostics -q ping
  kafka:
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
    networks:
      - kong_learning

networks:
  kong_learning:
    name: "kong_learning"
    driver: bridge
